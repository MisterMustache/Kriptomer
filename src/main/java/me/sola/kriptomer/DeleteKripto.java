/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.sola.kriptomer;

import java.awt.Dimension;
import java.awt.Point;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author TheGoodSpice
 */
public class DeleteKripto extends javax.swing.JFrame {

    /**
     * Creates new form DeleteKripto
     */
    MainWindow mainWindow;

    public DeleteKripto(Object mainWindow) {
        this.mainWindow = (MainWindow) mainWindow;
        initComponents();
        populirajTabelo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        naslov = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        izbrisi = new javax.swing.JButton();
        preklici = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        ime_tekst = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        kriptovaluta = new javax.swing.JComboBox<>();
        ime_profila = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        naslov.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        naslov.setText("Odstranjevanje obstoječege valute");
        naslov.setMinimumSize(new java.awt.Dimension(200, 32));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(naslov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(naslov, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        izbrisi.setBackground(new java.awt.Color(102, 153, 255));
        izbrisi.setForeground(new java.awt.Color(255, 255, 255));
        izbrisi.setText("Izbriši");
        izbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izbrisiActionPerformed(evt);
            }
        });

        preklici.setBackground(new java.awt.Color(255, 153, 153));
        preklici.setForeground(new java.awt.Color(255, 255, 255));
        preklici.setText("Prekliči");
        preklici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prekliciActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(izbrisi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preklici)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(izbrisi)
                    .addComponent(preklici))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setAlignmentX(0.0F);
        jPanel5.setAlignmentY(0.0F);

        ime_tekst.setText("Kriptovaluta:");
        ime_tekst.setPreferredSize(new java.awt.Dimension(63, 24));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ime_tekst, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ime_tekst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ime_profila.setText("ime profila");

        jLabel2.setText("Urejate profil:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ime_profila, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kriptovaluta, 0, 365, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kriptovaluta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ime_profila)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void usodnaNapaka(Exception e) {

        String[] options = new String[]{"Ponovni zagon", "Izbriši konfiguracijsko datoteko", "Zapri program"};
        int response = JOptionPane.showOptionDialog(null, "Opa! Nekaj je šlo hudo narobe! Stabilnost seje se je porušila. "
                + "Kriptomer se bo interno znova zagnal! V primeru persistente napake ročno znova zaženite aplikacijo "
                + "oz. zavrzite konfiguracijsko datoteko.\n\n" + e.getMessage(), "USODNA NAPAKA",
                JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, options, options[0]);

//        JOptionPane optionPane = new JOptionPane("Opa! Nekaj je šlo hudo narobe! Stabilnost seje se je porušila. "
//                + "Kriptomer se bo interno znova zagnal! V primeru persistente napake ročno znova zaženite aplikacijo "
//                + "oz. zavrzite konfiguracijsko datoteko.\n\n" + e.getMessage(), JOptionPane.ERROR_MESSAGE);
//        JDialog dialog = optionPane.createDialog("USODNA NAPAKA");
//        dialog.setAlwaysOnTop(true);
//        dialog.setVisible(true);
        switch (response) {
            case 0:
                System.out.println("restart");
                break;
            case 1:
                System.out.println("del");
                break;
            case 2:
                System.out.println("zapri");
                break;
            case -1:
                System.out.println("zapri 2");
                break;
            default:
                System.out.println("default");
        }

        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, e);

        Dimension d = new java.awt.Dimension(1080, 750);
        Point p = new java.awt.Point(10, 10);

        MainWindow ma;
        try {
            ma = new MainWindow(d, p);
            ma.restartKriptomer(false);
        } catch (IOException ex) {
            Logger.getLogger(AddProfile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(AddProfile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex) {
            Logger.getLogger(AddProfile.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void populirajTabelo() {

        try {

            JComboBox<String> profili = this.kriptovaluta;

            JSONParser jsonParser = new JSONParser();

            FileReader reader = null;
            try {
                reader = new FileReader("kriptomer.conf");
            } catch (FileNotFoundException e) {
                System.out.println("> profile loading error\n    ... FileNotFound Excpetion");
                usodnaNapaka(e);
            }

            Object obj = jsonParser.parse(reader);
            JSONObject saved = (JSONObject) obj;

            JSONArray jProfili = (JSONArray) saved.get("profili");

            int indeks_profila = Integer.parseInt(saved.get("default_profil").toString());
            JSONObject izbran_profil = (JSONObject) jProfili.get(indeks_profila);

            ime_profila.setText(izbran_profil.get("ime").toString());

            JSONArray valute_profila = (JSONArray) izbran_profil.get("valute");

            for (int i = 0; i < valute_profila.size(); i++) {
                JSONObject p = (JSONObject) valute_profila.get(i); // p = posamična vnešena valuta/vrednost
                String iv = p.get("valuta").toString(); // iv = ime valute

                switch (iv) { // još ena prevajalna tabela
                    case "btc":
                        iv = "Bitcoin";
                        break;
                    case "eth":
                        iv = "Ethereum";
                        break;
                    case "bch":
                        iv = "Bitcoin Cash";
                        break;
                    case "xrp":
                        iv = "Ripple";
                        break;
                    case "ltc":
                        iv = "Litecoin";
                        break;
                    case "xlm":
                        iv = "Stellar Lumens";
                        break;
                    case "omg":
                        iv = "OMG Network";
                        break;
                    case "zrx":
                        iv = "0x";
                        break;
                    default:
                        iv = "Neznan: " + iv;
                }

                profili.addItem(iv);
            }

        } catch (IOException | ParseException ex) {
            Logger.getLogger(DeleteProfile.class.getName()).log(Level.SEVERE, null, ex);
            usodnaNapaka(ex);
        }

    }

    private void izbrisiActionPerformed(java.awt.event.ActionEvent evt) {

        JSONParser jsonParser = new JSONParser(); // nov parser

        try {
            FileReader reader = new FileReader("kriptomer.conf"); // odpremo konfiguracijsko datoteko

            Object obj = jsonParser.parse(reader);
            JSONObject saved = (JSONObject) obj; // parsamo in shranimo vsebino datoteke v json object spremenljivko

            System.out.println(saved); //debug

            JSONArray profili = (JSONArray) saved.get("profili"); // pomikanje po shranjenih podatkih. pridobimo vse profile
            int index_profila = Integer.parseInt(saved.get("default_profil").toString()); // pridobimo index trenutnego izbranega profila
            JSONObject profil = (JSONObject) profili.get(index_profila); // pridobimo trenuten profil
            JSONArray valute = (JSONArray) profil.get("valute"); // pridobimo valute v tem profilu

            int index_iv = kriptovaluta.getSelectedIndex(); // index izbrane valute

            valute.remove(index_iv);
            
            profil.replace("valute", valute);
            
            int indeks_profila = Integer.parseInt(saved.get("default_profil").toString());
            
            profili.remove(index_profila);
            profili.add(index_profila, profil);
            saved.replace("profili", profili);

            FileWriter newfile = new FileWriter("kriptomer.conf"); // nov filewriter
            newfile.write(saved.toJSONString()); // pišemo na disk
            newfile.flush(); // tudi pišem. shranimo?

            System.out.println("    ... finished"); // debug

            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jPanel3); // pridobimo trenutni Jframe in ga zapremo
            frame.dispose();

            this.mainWindow.restartKriptomer(true); // funkcija, da se kriptomer ponovno zažene (na istem mestu)

            Thread.currentThread().stop(); // konec niti

        } catch (java.io.FileNotFoundException e) {
            System.out.println("> profile loading error\n    ... FileNotFound Excpetion");
            usodnaNapaka(e);
        } catch (java.io.IOException e) {
            System.out.println(">> profile loading error\n    ... IO Excpetion");
            usodnaNapaka(e);
        } catch (ParseException e) {
            System.out.println(">> profile loading error\n    ... Parsing Error. Corrupt File?");
            usodnaNapaka(e);
        }

    }

    private void prekliciActionPerformed(java.awt.event.ActionEvent evt) {

        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(jPanel3);
        frame.dispose();
        Thread.currentThread().stop();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ime_profila;
    private javax.swing.JLabel ime_tekst;
    private javax.swing.JButton izbrisi;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox<String> kriptovaluta;
    private javax.swing.JLabel naslov;
    private javax.swing.JButton preklici;
    // End of variables declaration//GEN-END:variables
}
